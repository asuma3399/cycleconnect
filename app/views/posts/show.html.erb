<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Post Details</title>
  <%= stylesheet_link_tag 'post_show', media: 'all', 'data-turbolinks-track': 'reload' %>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
  <div class="post-details">

      <div class="user-info">
        <div class="user-icon">
          <% if @post.user.icon.attached? %>
            <%= image_tag @post.user.icon, class: 'user-icon-img' %>
          <% else %>
            <%= image_tag 'default_user_icon.png', class: 'user-icon-img' %>
          <% end %>
        </div>
        <div class="user-name">
          <%= link_to @post.user.username, profile_path(@post.user), class: 'user-name' %>
        </div>
      </div>

    <div class="image-container">
      <% if @post.image.attached? %>
        <img src="<%= url_for(@post.image) %>" alt="<%= @post.description %>" style="width: 100%; max-height: 500px; object-fit: cover;">
      <% else %>
        <img src="placeholder.jpg" alt="No image available" style="width: 100%; max-height: 500px; object-fit: cover;">
      <% end %>
    </div>

    <div class="map-container" style="height: 400px; margin-top: 20px;">
      <div id="details-map" data-latitude="<%= @post.latitude %>" data-longitude="<%= @post.longitude %>" style="height: 400px;"></div>
    </div>

    <div id="like-btn<%= @post.id %>" class="like-btn">
      <%= render partial: "likes/like", locals: { post: @post } %>
    </div>

    <div class="description-container">
      <%= @post.description %>
    </div>

    <% if @post.tags.any? %>
    <div class="tag-container">
      <td># <%= @post.tags.first&.tag_name %></td>
    </div>
    <% end %>

    <!-- コメント一覧の追加 -->
    <% if @post.comments.any? %>
      <div class="comments-section">
        <h2>Comments</h2>
        <% @post.comments.each do |comment| %>
          <div class="comment">
            <div class="user-info">
            <div class="user-icon">
              <% if @post.user.icon.attached? %>
                <%= image_tag @post.user.icon, class: 'user-icon-img' %>
              <% else %>
                <%= image_tag 'default_user_icon.png', class: 'user-icon-img' %>
              <% end %>
            </div>
            </div>
            <div class="user-name-container">
              <strong><%= comment.user.username %>:</strong> <%= comment.text %>
            </div>
            <div class="comment-delete-btn">
            <% if comment.user == current_user %>
              <%= link_to 'Delete', post_comment_path(@post, comment), data: { turbo_method: :delete }, class: 'btn btn-danger' %>
            <% end %>
            </div>
          </div>
        <% end %>
      </div>
    <% end %>

    <!-- コメントフォームの追加 -->
    <div class="comment-form">
      <%= form_with(model: [ @post, @post.comments.build ], local: true) do |form| %>
        <div class="field">
          <%= form.label :text %>
          <%= form.text_area :text, rows: 4 %>
        </div>
        <%= form.hidden_field :post_id, value: @post.id %>
        <%= form.hidden_field :user_id, value: current_user.id %>
        <div class="actions">
          <%= form.submit 'Add Comment', class: 'btn btn-primary' %>
        </div>
      <% end %>
    </div>

    <!-- 削除ボタンの追加 -->
    <% if user_signed_in? && current_user.id == @post.user.id %>
      <div class="actions" style="margin-top: 20px;">
        <%= link_to 'Delete Post', post_path(@post), data: { turbo_method: :delete }, class: 'btn btn-danger' %>
      </div>
    <% end %>
    </div>

<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script>
const initializeDetailsMap = () => {
  const mapElement = document.getElementById('details-map');

  if (mapElement) {
    if (window.detailsMap) {
      window.detailsMap.remove();
    }

    const latitude = parseFloat(mapElement.dataset.latitude);
    const longitude = parseFloat(mapElement.dataset.longitude);

    if (!isNaN(latitude) && !isNaN(longitude)) {
      window.detailsMap = L.map(mapElement).setView([latitude, longitude], 13); // 指定の緯度経度で地図を表示
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '© OpenStreetMap contributors'
      }).addTo(window.detailsMap);
      L.marker([latitude, longitude]).addTo(window.detailsMap)
        .bindPopup('This is the location of the image.');
    }
  }
};

document.addEventListener("turbo:load", initializeDetailsMap);
document.addEventListener("DOMContentLoaded", initializeDetailsMap);
</script>
</body>
</html>